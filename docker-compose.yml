# version: '3.8'

# services:

#   webhook_service:
#     image: webhook_img
#     container_name: webhook_service_new
#     ports:
#       - "3000:8080"  
#     labels:
#       - traefik.enable=true
#       - traefik.http.routers.webhook_service.entrypoints=websecure  
#       - traefik.http.routers.webhook_service.rule=Host(`webhook.rio.softwaversion: '3.8'

# services:
#   webhook_service:
#     image: webhook_img
#     container_name: webhook_service_new
#     labels:
#       - traefik.enable=true
#       - traefik.http.routers.webhook_service.entrypoints=websecure
#       - traefik.http.routers.webhook_service.rule=Host(`webhook.rio.software`)
#       - traefik.http.routers.webhook_service.tls.certresolver=myresolver
#       - traefik.http.services.webhook_service.loadbalancer.server.port=8080
#     networks:
#       - deployed-containers
#     restart: unless-stopped
#     deploy:
#       resources:
#         limits:
#           memory: 1G
#         reservations:
#           memory: 512M

# networks:
#   deployed-containers:
#     external: true
# re`) 
#       - traefik.http.routers.webhook_service.tls.certresolver=myresolver  
#       - traefik.http.services.webhook_service.loadbalancer.server.port=8080 
#     networks:
#       - deployed-containers
#     restart: unless-stopped
#     deploy:
#       resources:
#         limits:
#           memory: 1G
#         reservations:
#           memory: 512M

# networks:
#   deployed-containers:
#     external: true


version: '3.8'

services:
  webhook_service:
    image: webhook_img
    container_name: webhook_service_new
    ports:
      - "3000:8080"  # Optional for debugging

    volumes:
      - .:/app
      
    labels:
      - traefik.enable=true
      - traefik.http.routers.webhook_service.entrypoints=websecure
      - traefik.http.routers.webhook_service.rule=Host(`webhook.rio.software`)
      - traefik.http.routers.webhook_service.tls.certresolver=myresolver
      - traefik.http.services.webhook_service.loadbalancer.server.port=8080
    networks:
      - deployed-containers
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

networks:
  deployed-containers:
    external: true